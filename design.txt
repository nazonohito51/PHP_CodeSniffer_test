ショッピングカート

1.
  * 指定された商品をショッピングカートに入れることができる
    ・商品名: 'Perfect PHP', 価格: 3,600円, 発売日: 2010/11, 在庫: 2
  * 商品をカートに入れると在庫数が減る。また商品の購入数も指定できる。


とりあえずitemクラス、cartクラスを作ろう。
itemクラスは・・・
　・プロパティ：商品名、価格、発売日、在庫数
　・在庫確認メソッド
　・引き当てメソッド
cartクラスは・・・
　・商品追加メソッド（購入数指定有）
　　→itemクラスに在庫数の問い合わせを行い、在庫があれば引き当て＋cart追加？
　・商品削除メソッド
　・カート内商品一覧メソッド
cart内itemから、対象itemオブジェクトを呼び出せる必要がある。各itemオブジェクトにidを結び付け管理するshowcaseクラスを作る。
　・プロパティ：商品オブジェクト配列
　・商品追加メソッド
　・item_idからitemオブジェクトを返すメソッド
　・本当はDB管理にして、テスト時はモックを作る方がよさそうだけど、モックを使用することはまだ重そうなので。



2.
  * 商品の配送方法・支払い方法を選択する
    - 配送方法
      + 通常配達      (配送料:   0円)
      + 当日お急ぎ便   (配送料: 200円)
    - 支払い方法
      + クレジットカード
      + 代金引換
      + コンビニ・ATM払い
  * 配送料を含めた合計金額を算出できる。


cartクラスに次を追加か
　・料金算出メソッド（配送方法指定、支払方法指定あり）
　　→戻り値は合計金額



3.
  * 新たに商品と商品情報の追加
    ・商品名: 'TEST-DRIVEN DEVELOPMENT', 価格: 3,000円, 発売日: 2006/12, 在庫: 0
    ・商品名: 'RedBull',                 価格:   240円, 発売日: 2011/7,  在庫: 50
  * 商品の在庫がない、もしくはカートにいれた商品個数が在庫数を上回る場合、「当日お急ぎ便」は選択できない
  * 「当日お急ぎ便」を選択した場合、「コンビニ・ATM払い」は選択できない
  * RedBullのみ24個以上カートに入れると価格が20%offとなる。


複数のitemオブジェクトを扱える必要がある
　→showcaseクラスを追加
　→各テストのsetUpメソッドで、初期条件の商品を追加させる必要があるか
showcaseクラスに商品を追加できる必要がある
　・商品追加メソッド
cartクラスの料金算出メソッドを修正
　・料金算出メソッド実行時、バリデーションメソッドを呼び出す
　　→商品在庫を問い合わせする。在庫が足りない＋当日お急ぎ便ならばエラー。
　　→当日お急ぎ便＋コンビニ・ATM払いならばエラー。
　　→バリデーション失敗時はnullか例外を返す
　・料金算出メソッド実行時、サービス割引処理を実行する。
　　→とりあえず各itemオブジェクトが割引メソッドを持ち、料金算出メソッドがそれらを全て呼び出す。



4.
  * 商品合計金額(配送料込み)が10,000円以上の場合、配送料金は全て0円として計算される
  * 注文を確定させる。確定後に合計金額が表示され、カートがクリアされる。


cartメソッドの料金算出メソッドを修正
　・配送料サービスメソッドを追加
　　→料金算出メソッド最後に呼び出され、配送料込みの合計金額が10,000円以上ならば、配送料を0円にする。
　・注文確定メソッドを追加
　　→再度料金算出メソッドを呼び出して、エラーがないことを確認。金額を受け取り表示。cartの中身を空に。
　　→cartクラスに情報をクリアするメソッドを追加。